image:
  repository: test
  tag: 0.0.0

configPrefix: test

# Service parameters
apiBasePathPrefix: /path/v1

# Service base path
apiBasePath: /test/
# Name of the database
mongodb:
  dbName: test
# This parameter is used as Kafka's group id
serviceName: test-service-name
# This parameter specifies the client id in Kafka
serviceInstanceId: test-service-instance-id
# This parameter is used as Kafka's group id
# serviceNameConsumer: test-service-name-consumer
# This parameter specifies the client id in Kafka
serviceInstanceIdConsumer: test-service-instance-id-consumer

cluster:
  name: default-cluster

config:
  foo: bar
  db_name: test-database # That should be omitted and set dynamically to release name
  service_instance_id: test-id

cmd:  test

ports:
  enabled: true

livenessProbe:
  enabled: true

readinessProbe:
  enabled: true    

vaultAgent:
  enabled: true
  releaseNameOverwrite: overwritten-release-name
  secrets:
    generic:
      ghga-auth-public:
        path: operational-secrets/data/shared/managed-keys/ghga-auth/public
        parameterName: AUTH_KEY
        dataKey: key
    mongodb:
      enabled: true
    service:
      enabled: true
    crypt4ghInternalPub:
      enabled: false
    crypt4ghInternalPriv:
      enabled: true
    crypt4ghExternalPriv:
      enabled: true

mapping:
  enabled: true
  hostname: my.test.com

httpRoute:
  enabled: true
  hostnames:
    - my.test.com
  rules:
    - filters:
        - type: RequestHeaderModifier
          requestHeaderModifier:
            add:
              - name: my-header
                value: foo
      backendRefs:
        - name: my-test-svc1
          weight: 1
          port: 80

topicPrefix: prefix

kafkaUser:
  enabled: true

_topics:
  testEvent:
    topic:
      name: test_event_topic
      value: "my-topic"
    types:
    - name: test_event_type
      value: searchable_resource_deleted
    - name: resource_upsertion_event_type
      value: searchable_resource_upserted
    kafkaUser:
      operations:
        - Write
  # as producer
  deadLetterQueue:
    topic:
      name: kafka_dlq_topic
      value: dlq
    kafkaUser:
      operations:
        - Write
  # as consumer
  deadLetterQueueRetry:
    topic:
      name: null
      value: retry
    kafkaUser:
      operations:
        - Read
  wildcard:
    topic:
      name: wildcard
      value: '*'
    kafkaUser:
      operations:
        - Read
        - Write
  deadLetterQueueRetries:
    topic:
      name: null
      value: retry-
    kafkaUser:
      operations:
        - Write
        - Describe
      resource:
        patternType: prefix

probe:
  enabled: true

