image:
  repository: test
  tag: 0.0.0

configPrefix: test

# Service parameters

# Service base path
apiBasePath: /test/
# Name of the database
mongodb:
  dbName: test
# This parameter is used as Kafka's group id
serviceName: test-service-name
# This parameter specifies the client id in Kafka
serviceInstanceId: test-service-instance-id
# This parameter is used as Kafka's group id
# serviceNameConsumer: test-service-name-consumer
# This parameter specifies the client id in Kafka
serviceInstanceIdConsumer: test-service-instance-id-consumer

parameters:
  default:
    foo: bar
  rest:
    service_instance_id: 'rest.1'
  consumer:
    service_instance_id: 'consumer.1'

containers:
- name: rest
  type: "rest"
  cmd:  test
  config:
    name: parameters-rest
    key: parameters-rest
    #mountPath: /app/config

vaultAgent:
  enabled: true
  secrets:
    generic:
      ghga-auth-public:
        path: operational-secrets/data/shared/managed-keys/ghga-auth/public
        parameterName: AUTH_KEY
        dataKey: key
    mongodb:
      enabled: true
    service:
      enabled: true
    crypt4ghInternalPub:
      enabled: false
    crypt4ghInternalPriv:
      enabled: true
    crypt4ghExternalPriv:
      enabled: true


kafkaUser:
  enabled: true

_topics:
  testEvent:
    topic:
      name: test_event_topic
      value: "my-topic"
    types:
    - name: test_event_type
      value: searchable_resource_deleted
    - name: resource_upsertion_event_type
      value: searchable_resource_upserted
    kafkaUser:
      operations:
        - Write
  # as producer
  deadLetterQueue:
    topic:
      name: kafka_dlq_topic
      value: dlq
    kafkaUser:
      operations:
        - Write
  # as consumer
  deadLetterQueueRetry:
    topic:
      name: null
      value: retry
    kafkaUser:
      operations:
        - Read
  wildcard:
    topic:
      name: wildcard
      value: '*'
    kafkaUser:
      operations:
        - Read
        - Write
