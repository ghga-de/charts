---
# Source: test-job/templates/cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: test-job
  namespace: "test"
  labels:
    app.kubernetes.io/name: test-job
    helm.sh/chart: test-job-0.0.0
    app.kubernetes.io/instance: test-job
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "0.0.0"
    app: test-job
  annotations:
spec:
  schedule: 0 0 1 1 0
  successfulJobsHistoryLimit: 5
  failedJobsHistoryLimit: 1
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/name: test-job
        helm.sh/chart: test-job-0.0.0
        app.kubernetes.io/instance: test-job
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "0.0.0"
    spec:
      template:
        metadata:
          annotations:
            vault.hashicorp.com/agent-cache-enable: "true"
            vault.hashicorp.com/agent-init-first: "true"
            vault.hashicorp.com/agent-inject: "true"
            vault.hashicorp.com/agent-pre-populate-only: "false"
            vault.hashicorp.com/agent-run-as-same-user: "true"
            vault.hashicorp.com/tls-skip-verify: "false"
            vault.hashicorp.com/role: "service-role"
            vault.hashicorp.com/agent-inject-command-mongodb-connection-string: |
              kill -TERM $(pgrep python)
            vault.hashicorp.com/agent-inject-secret-mongodb-connection-string: database/creds/my-role
            vault.hashicorp.com/agent-inject-template-mongodb-connection-string: |
              {{- with secret "database/creds/my-role" -}}
              export TEST_DB="mongodb://{{username}}:{{password}}@mongodb:27017/admin"
              export DB_CONNECTION_STR=$TEST_DB
              {{- end -}}
            vault.hashicorp.com/agent-inject-command-service-secrets: |
              kill -TERM $(pgrep python)
            vault.hashicorp.com/agent-inject-secret-service-secrets: operational-secrets/data/unique/apps/archive/service
            vault.hashicorp.com/agent-inject-template-service-secrets: |
              {{ with secret "operational-secrets/data/unique/apps/archive/service" -}}
              {{ if .Data.data }}{{- range $k, $v := .Data.data }}
              export {{ $k }}='{{ $v }}'
              {{- end }}{{- end }}{{- end }}
          labels:
            app.kubernetes.io/name: test-job
            helm.sh/chart: test-job-0.0.0
            app.kubernetes.io/instance: test-job
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/version: "0.0.0"
            app: test-job
        spec:
          restartPolicy: "OnFailure"
          serviceAccountName: test-job
          shareProcessNamespace: false
          containers:
          - image: docker.io/busybox:latest
            imagePullPolicy: Always
            command: ["sh", "-c"]
            
            args:
              - if [ -d "/vault/secrets" ]; then
                  for f in /vault/secrets/*; do
                    if [ -f "$f" ]; then
                      . "$f";
                    fi;
                  done;
                fi;
                sleep 100000000;
            
            name: test-job-job
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              runAsUser: 1000
              seccompProfile:
                type: RuntimeDefault
            volumeMounts:
            - name: config
              mountPath: /home/appuser/.config.yaml
              subPath: .config.yaml
              readOnly: true
          volumes:
          - name: config
            configMap:
              name: test-job
              items:
              - key: parameters
                path: .config.yaml
