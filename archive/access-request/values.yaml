image:
  repository: "ghga/access-request-service"

configPrefix: ars

# Service parameters

# Service base path
apiBasePath: /ars/
# Name of the database
mongodb:
  dbName: access-request
# This parameter is used as Kafka's group id
serviceName: ars-rest
# This parameter specifies the client id in Kafka
serviceInstanceId: ars-rest-1
# This parameter is used as Kafka's group id
serviceNameConsumer: ars-consumer
# This parameter specifies the client id in Kafka
serviceInstanceIdConsumer: ars-consumer-1

# Those values are directly injected into the service's configuration
parameters:
  default:
    auth_key: '{}'
    mongo_dsn: null
    download_access_url: http://claims-repository:8080/download-access
    host: "0.0.0.0"
    kafka_enable_dlq: true
    db_version_collection: "arsDbVersions"
    migration_wait_sec: 10

containers:
- name: rest
  type: "rest"
  cmd: ars run-rest
  config:
    name: parameters-rest
    key: parameters-rest
- name: consumer
  type: "consumer"
  cmd: ars consume-events
  config:
    name: parameters-consumer
    key: parameters-consumer


_topics:
  fileRegisteredEvent:
    # as producer
    topic:
      name: access_request_topic
      value: access-requests
    kafkaUser:
      operations:
        - Write
        - Create

  datasetChangeEvent:
    # as consumer
    topic:
      name: dataset_change_topic
      value: metadata-datasets
    types:
    - name: dataset_upsertion_type
      value: dataset_created
    - name: dataset_deletion_type
      value: dataset_deleted
    kafkaUser:
      operations:
        - Read
        - Create
  # as producer
  deadLetterQueue:
    topic:
      name: kafka_dlq_topic
      value: dlq
    kafkaUser:
      operations:
        - Write
        - Create
  # as consumer
  deadLetterQueueRetry:
    topic:
      name: null
      value: retry
    kafkaUser:
      operations:
        - Read
        - Create
