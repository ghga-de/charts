image:
  repository: "ghga/work-package-service"

configPrefix: wps

# Service parameters

# Service base path
apiBasePath: /wps/
# Name of the database
mongodb:
  dbName: work-package
# This parameter is used as Kafka's group id
serviceName: wps-rest
# This parameter specifies the client id in Kafka
serviceInstanceId: wps-rest-1
# This parameter is used as Kafka's group id
serviceNameConsumer: wps-consumer
# This parameter specifies the client id in Kafka
serviceInstanceIdConsumer: wps-consumer-1

parameters:
  default:
    auth_key: '{}'
    mongo_dsn: null
    db_name: wps
    download_access_url: http://claims-repository:8080/download-access
    host: "0.0.0.0"
    service_instance_id: 'wps_1'
    service_name: wps
    work_package_signing_key: '{}'
    kafka_enable_dlq: true
  rest:
    service_instance_id: 'rest.1'
  consumer:
    service_instance_id: 'consumer.1'

containers:
- name: rest
  type: "rest"
  cmd: wps run-rest
  config:
    name: parameters-rest
    key: parameters-rest
- name: consumer
  type: "consumer"
  cmd: wps consume-events
  config:
    name: parameters-consumer
    key: parameters-consumer

_topics:
  datasetChangeEvent:
    # as consumer
    topic:
      name: dataset_change_topic
      value: metadata-datasets
    types:
    - name: dataset_upsertion_type
      value: dataset_created
    - name: dataset_deletion_type
      value: dataset_deleted
    kafkaUser:
      operations:
        - Read
        - Create
  # as producer
  deadLetterQueue:
    topic:
      name: kafka_dlq_topic
      value: dlq
    kafkaUser:
      operations:
        - Write
        - Create
  # as consumer
  deadLetterQueueRetry:
    topic:
      name: null
      value: retry
    kafkaUser:
      operations:
        - Read
        - Create
