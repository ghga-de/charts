apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: user-management
  name: user-management
spec:
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: user-management
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-init-first: "true"
        vault.hashicorp.com/tls-skip-verify: "true"
        vault.hashicorp.com/agent-pre-populate-only: "true"
        vault.hashicorp.com/agent-inject-secret-int-keys: 'secret/data/auth/pub/int'
        vault.hashicorp.com/agent-inject-template-int-keys: |
          {{ with secret "secret/data/auth/pub/int" -}}
          export AUTH_SERVICE_AUTH_KEY='{{ .Data.data.data }}'
          {{- end }}
        vault.hashicorp.com/agent-inject-secret-variables: 'secret/data/auth-adapter/data'
        vault.hashicorp.com/agent-inject-template-variables: |
          {{ with secret "secret/data/auth-adapter/data" -}}
          export AUTH_SERVICE_DB_URL="{{ .Data.data.db_url }}"
          {{- end }}
        vault.hashicorp.com/role: "user-management-role"
        vault.hashicorp.com/agent-run-as-same-user: "true"
      labels:
        app: user-management
        version: staging
        sidecar.istio.io/inject: "true"
    spec:
      serviceAccountName: user-management
      containers:
      - env:
        - name: AUTH_SERVICE_HOST
          value: 0.0.0.0
        - name: AUTH_SERVICE_PORT
          value: "8080"
        - name: AUTH_SERVICE_DB_NAME
          value: auth-db
        image: ghga/auth-service:0.0.0-60-e8c69d2-main
        command: ["bash"]
        args:  [ '-c', 'source /vault/secrets/int-keys && source /vault/secrets/variables && shred /vault/secrets/* && auth-service']
        name: user-management
        securityContext:
          runAsUser: 1000
          capabilities:
            drop:
              - ALL
          seccompProfile:
            type: "RuntimeDefault"
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          allowPrivilegeEscalation: false
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 500m
            memory: 256M
          requests:
            cpu: 100m
            memory: 64M
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 15
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 15
      restartPolicy: Always