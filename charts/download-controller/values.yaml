podAnnotations:
  vault.hashicorp.com/agent-cache-enable: "true"
  vault.hashicorp.com/agent-init-first: "true"
  vault.hashicorp.com/agent-inject: "true"
  vault.hashicorp.com/agent-inject-command-mongodb-connection-string: |
    kill -TERM $(pidof python)
  vault.hashicorp.com/agent-inject-command-service-secrets: |
    kill -TERM $(pidof python)
  vault.hashicorp.com/agent-inject-secret-auth-pub-wps: secret/data/auth/pub/wps
  vault.hashicorp.com/agent-inject-secret-mongodb-connection-string: database/creds/testing-download-controller
  vault.hashicorp.com/agent-inject-secret-service-secrets: secret/data/services/testing/download-controller
  vault.hashicorp.com/agent-inject-template-auth-pub-wps: |
    {{ with secret "secret/data/auth/pub/wps" -}}
    export DCS_AUTH_KEY='{{ .Data.data.data }}'
    {{- end }}
  vault.hashicorp.com/agent-inject-template-mongodb-connection-string: |
    {{ with secret "database/creds/testing-download-controller" -}}
    export DCS_DB_URL=mongodb://{{ .Data.username }}:{{ .Data.password }}@mongodb-0.mongodb-headless.database.svc.cluster.local/testing-updates-download-controller?authSource=admin
    export DCS_DB_CONNECTION_STR=$DCS_DB_URL
    {{- end }}
  vault.hashicorp.com/agent-inject-template-service-secrets: |
    {{ with secret "secret/data/services/testing/download-controller" -}}
    {{ if .Data.data }}{{- range $k, $v := .Data.data }}
    export DCS_{{ $k }}='{{ $v }}'
    {{- end }}{{- end }}{{- end }}
  vault.hashicorp.com/agent-pre-populate-only: "false"
  vault.hashicorp.com/agent-run-as-same-user: "true"
  vault.hashicorp.com/log-format: json
  vault.hashicorp.com/log-level: debug
  vault.hashicorp.com/role: testing-download-controller-role
  vault.hashicorp.com/tls-skip-verify: "true"
command: []
args: []
horizontalPodAutoscaler:
  enabled: false
  averageCpuUtilization: 75
  averageMemoryUtilization: 75
image:
  name: "ghga/download-controller-service"
port: "8080"
resources:
  limits:
    cpu: 1500m
    memory: 2048M
  requests:
    cpu: 100m
    memory: 256M

config_prefix: dcs

ingress:
  enabled: false
  annotations: {}
  hostname: ""
  prefix: /
  tls:
    enabled: false
    secretName: ""

mapping:
  enabled: false
  hostname: ""
  prefix: /

parameters:
  default:
    api_root_path: /
    api_route: /ga4gh/drs/v1
    auth_algs:
    - ES256
    auth_check_claims:
      email: null
      exp: null
      file_id: null
      full_user_name: null
      iat: null
      type: null
      user_id: null
      user_public_crypt4gh_key: null
    auth_key: '{}'
    auth_map_claims: {}
    auto_reload: false
    aws_config_ini: null
    cache_timeout: 7
    cors_allow_credentials: false
    cors_allowed_headers: []
    cors_allowed_methods: []
    cors_allowed_origins: []
    db_connection_str: null
    db_name: dcs
    docs_url: /docs
    download_served_event_topic: downloads
    download_served_event_type: drs_object_served
    drs_server_uri: drs://localhost:8080/
    ekss_base_url: http://encryption-key-store-svc:8080
    file_deleted_event_topic: downloads
    file_deleted_event_type: drs_object_deleted
    file_registered_event_topic: downloads
    file_registered_event_type: drs_object_registered
    files_to_delete_topic: purges
    files_to_delete_type: files_to_delete
    files_to_register_topic: internal_registrations
    files_to_register_type: internal_file_registered
    host: "0.0.0.0"
    kafka_servers: []
    log_level: info
    openapi_url: /openapi.json
    outbox_bucket: outbox
    port: 8080
    presigned_url_expires_after: 10
    retry_access_after: 120
    s3_access_key_id: null
    s3_endpoint_url: null
    s3_secret_access_key: null
    s3_session_token: null
    service_instance_id: 'dcs_1'
    service_name: dcs
    unstaged_download_event_topic: downloads
    unstaged_download_event_type: unstaged_drs_object_requested
    workers: 1
  rest:
    service_instance_id: 'dcs_rest_1'
  consumer:
    service_instance_id: 'dcs_consumer_1'

shareProcessNamespace: false
serviceCommand: dcs run-rest
